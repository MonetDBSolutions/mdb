# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci_workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: set monetdb
      run: |
        # install monetdb
        sudo sh -c "echo 'deb http://dev.monetdb.org/downloads/deb/ bionic monetdb' > /etc/apt/sources.list.d/monetdb.list"
        sudo sh -c "echo 'deb-src https://dev.monetdb.org/downloads/deb/ bionic monetdb' >> /etc/apt/sources.list.d/monetdb.list"
        wget --output-document=- http://dev.monetdb.org/downloads/MonetDB-GPG-KEY | sudo apt-key add -
        sudo apt-get update -q
        sudo apt-get install -qy monetdb5-sql monetdb-client
        # start database
        sudo systemctl enable monetdbd
        sudo systemctl start monetdbd
        sudo ls -lart /var/monetdb5/dbfarm
        # set up test database
        sudo -u monetdb monetdb create mroll_test_db
        sudo -u monetdb monetdb release mroll_test_db
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        poetry run python -m unittest
